name: linux

on: 
  push:

jobs:

  build-linux:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: oe-python-plugin
          python-version: "3.10"
          auto-activate-base: false
      - name: setup
        run: |
          sudo apt update
          cd ../..
          git clone https://github.com/open-ephys/plugin-GUI.git --branch main
          sudo ./plugin-GUI/Resources/Scripts/install_linux_dependencies.sh
          cd plugin-GUI/Build && cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ..
      - name: build
        run: |
          conda env list
          cd Build
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DPython_ROOT_DIR="$CONDA/envs/oe-python-plugin" -DCOPY_PYTHON_DL=ON ..
          make
  #    - name: test
  #      run: cd build && ctest
      - name: package
        env:
          build_dir: "Build"
          package: PythonProcessor-linux
        run: |
          plugin_api=$(grep -rnw ../../plugin-GUI/Source -e '#define PLUGIN_API_VER' | grep -Eo "[0-9]*" | tail -1)
          tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          new_plugin_ver=$tag-API$plugin_api
          mkdir plugins 
          cp -r $build_dir/*.so plugins
          zipfile=${package}_${new_plugin_ver}.zip
          echo "zipfile=${zipfile}" >> $GITHUB_ENV
          zip -r -X $zipfile plugins $build_dir/shared
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.zipfile }}
          path: ${{ env.zipfile }}
      - name: deploy
        if: github.ref == 'refs/heads/main'
        env:
          artifactoryApiKey: ${{ secrets.artifactoryApiKey }}
        run: |
          curl -H "X-JFrog-Art-Api:$artifactoryApiKey" -T ${{ env.zipfile }} "https://openephys.jfrog.io/artifactory/PythonProcessor-plugin/linux/${{ env.zipfile }}"